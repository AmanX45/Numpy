1. **Introduction to NumPy**
2. **Array Joining**
3. **Array Searching**
4. **Array Splitting**
5. **Interview Questions**

---
Day 4 Study Material (Array Joining , Array Searching , Array Splitting )...For codefile checkout the .ipynb file in NumPy Repository
---


## 1. Introduction to NumPy

NumPy is a Python library for numerical computations. It provides support for arrays, matrices, and many mathematical operations.

**Installation:**
```bash
pip install numpy
```

**Importing NumPy:**
```python
import numpy as np
```

---

## 2. Array Joining

Joining arrays combines multiple arrays into one. NumPy provides functions like `concatenate()`, `stack()`, `hstack()`, and `vstack()` for this purpose.

### 2.1 `numpy.concatenate()`
Used to join arrays along an existing axis.

**Syntax:**
```python
numpy.concatenate((a1, a2, ...), axis=0)
```

**Example:**
```python
arr1 = np.array([1, 2])
arr2 = np.array([3, 4])
result = np.concatenate((arr1, arr2))  # Output: [1 2 3 4]
```

### 2.2 `numpy.stack()`
Joins arrays along a new axis.

**Syntax:**
```python
numpy.stack((a1, a2, ...), axis=0)
```

**Example:**
```python
arr1 = np.array([1, 2])
arr2 = np.array([3, 4])
result = np.stack((arr1, arr2), axis=0)
# Output: [[1, 2], [3, 4]]
```

### 2.3 `numpy.hstack()`
Joins arrays horizontally (along axis 1).

**Syntax:**
```python
numpy.hstack((a1, a2))
```

**Example:**
```python
arr1 = np.array([1, 2])
arr2 = np.array([3, 4])
result = np.hstack((arr1, arr2))  # Output: [1 2 3 4]
```

### 2.4 `numpy.vstack()`
Joins arrays vertically (along axis 0).

**Syntax:**
```python
numpy.vstack((a1, a2))
```

**Example:**
```python
arr1 = np.array([1, 2])
arr2 = np.array([3, 4])
result = np.vstack((arr1, arr2))
# Output:
# [[1, 2]
#  [3, 4]]
```

---

## 3. Array Searching

Searching helps in finding the indices of elements or checking conditions in arrays.

### 3.1 `numpy.where()`
Returns indices of elements that satisfy a condition.

**Syntax:**
```python
numpy.where(condition, [x, y])
```

**Example:**
```python
arr = np.array([1, 2, 3, 4])
result = np.where(arr > 2)  # Output: (array([2, 3]),)
```

### 3.2 `numpy.searchsorted()`
Finds indices where elements should be inserted to maintain order.

**Syntax:**
```python
numpy.searchsorted(a, v, side='left', sorter=None)
```

**Example:**
```python
arr = np.array([1, 3, 5, 7])
index = np.searchsorted(arr, 6)  # Output: 3
```

### 3.3 `numpy.nonzero()`
Finds indices of non-zero elements.

**Syntax:**
```python
numpy.nonzero(a)
```

**Example:**
```python
arr = np.array([0, 1, 0, 3])
result = np.nonzero(arr)  # Output: (array([1, 3]),)
```

---

## 4. Array Splitting

Splitting divides an array into multiple sub-arrays.

### 4.1 `numpy.split()`
Splits an array into multiple sub-arrays as specified.

**Syntax:**
```python
numpy.split(ary, indices_or_sections, axis=0)
```

**Example:**
```python
arr = np.array([1, 2, 3, 4, 5, 6])
result = np.split(arr, 3)
# Output: [array([1, 2]), array([3, 4]), array([5, 6])]
```

### 4.2 `numpy.array_split()`
Allows unequal splitting.

**Syntax:**
```python
numpy.array_split(ary, indices_or_sections, axis=0)
```

**Example:**
```python
arr = np.array([1, 2, 3, 4, 5])
result = np.array_split(arr, 3)
# Output: [array([1, 2]), array([3, 4]), array([5])]
```

### 4.3 `numpy.hsplit()`
Splits arrays horizontally (along axis 1).

**Syntax:**
```python
numpy.hsplit(ary, indices_or_sections)
```

**Example:**
```python
arr = np.array([[1, 2, 3], [4, 5, 6]])
result = np.hsplit(arr, 3)
# Output: [array([[1], [4]]), array([[2], [5]]), array([[3], [6]])]
```

---

## 5. Interview Questions

### Basic:
1. What is NumPy, and why is it used?
2. How do you install and import NumPy?
3. Explain the difference between `concatenate()` and `stack()`.

### Intermediate:
1. How does `numpy.searchsorted()` handle duplicate values?
2. What is the difference between `split()` and `array_split()`?
3. Write code to find the indices of all even numbers in an array.

### Advanced:
1. Can you split an array into unequal parts using NumPy? How?
2. How does `numpy.where()` differ from `numpy.nonzero()`?
3. Explain how to join arrays along a new axis using NumPy.

---

